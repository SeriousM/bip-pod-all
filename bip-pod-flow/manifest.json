{
  "name": "flow",
  "title": "Flow Control",
  "description": "Control flows, filtering, token generation for hubs, inline",
  "url": "",
  "trackDuplicates": true,
  "config": {},
  "auth": {
    "strategy": "none"
  },
  "rpcs": {},
  "actions": {
    "match": {
      "title": "Pattern Filter",
      "description": "Conditionally Forward Or Discard Messages",
      "trigger": "invoke",
      "config": {
        "properties": {
          "accept_on": {
            "type": "string",
            "optional": true,
            "title": "Accept Match",
            "description" : "Literal String Or <a href='http://en.wikipedia.org/wiki/Regular_expression'>Regular Expression</a>"
          },
          "discard_on": {
            "type": "string",
            "optional": true,
            "title": "Discard Match",
            "description" : "Literal String Or <a href='http://en.wikipedia.org/wiki/Regular_expression'>Regular Expression</a>"
          }
        },
        "disposition": [
          "accept_on",
          "discard_on"
        ]
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
           "funnel": {
            "type": "string",
            "title": "Search On",
            "description" : "When Empty, Matches Any Attribute"
          },
          "accept_on": {
            "type": "string",
            "optional": true,
            "title": "Accept Filter",
            "description" : "Literal String Or <a href='http://en.wikipedia.org/wiki/Regular_expression'>Regular Expression</a>"
          },
          "discard_on": {
            "type": "string",
            "optional": true,
            "title": "Discard Filter",
            "description" : "Literal String Or <a href='http://en.wikipedia.org/wiki/Regular_expression'>Regular Expression</a>"
          }
        },
        "disposition": [
          "accept_on",
          "discard_on",
          "funnel"
        ]
      }
    },
    "xml2json": {
      "title": "Convert XML to JSON",
      "description": "Converts An XML Document Into JSON",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "body": {
            "title": "XML"
          }
        },
        "disposition": [
          "body"
        ]
      }
    },
    "nonce": {
      "title": "Generate A Random String",
      "description": "Generate A Random 64 Bit String",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "nonce": {
            "type": "string",
            "title": "Random String"
          }
        }
      },
      "imports": {
        "properties": {}
      }
    },
    "ksplit": {
      "title": "Split JSON By Row",
      "description": "Exports Every Row Or Hash Key For An Object",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Source Key"
          },
          "index": {
            "type": "integer",
            "title": "Item Offset"
          },
          "value": {
            "type": "mixed",
            "title": "Key Value"
          }
        }
      },
      "imports": {
        "properties": {
          "rows": {
            "type": "object",
            "title": "JSON Object"
          }
        },
        "required": [
          "rows"
        ],
        "disposition": [
          "rows"
        ]
      }
    },
    "lsplit": {
      "title": "Split Text by Line",
      "description": "Export Every Line In A Text Document Individually (Windows/Mac/Linux)",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "index": {
            "type": "integer",
            "title": "Line Number"
          },
          "value": {
            "type": "string",
            "title": "Line Value"
          }
        }
      },
      "imports": {
        "properties": {
          "body": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "body"
        ],
        "disposition": [
          "body"
        ]
      }
    },
    "str_split": {
      "title": "Split Text by String",
      "description": "Export Every Line In A Text Document Individually, Split By Custom Delimiter",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "index": {
            "type": "integer",
            "title": "Line Number"
          },
          "value": {
            "type": "string",
            "title": "Line Value"
          }
        }
      },
      "imports": {
        "properties": {
          "body": {
            "type": "string",
            "title": "Text"
          },
          "split_by": {
            "type": "string",
            "title": "Separator String"
          }
        },
        "required": [
          "body",
          "split_by"
        ],
        "disposition": [
          "body",
          "split_by"
        ]
      }
    },
    "blackhole": {
      "title": "Do Nothing",
      "description": "Great For Testing",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {}
      }
    },
    "counter": {
      "title": "Record A Count",
      "description": "Increment A Counter By Custom Group",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "new_count": {
            "type": "integer",
            "title": "New Count"
          }
        }
      },
      "imports": {
        "properties": {
          "group_by": {
            "type": "string",
            "title": "Group By"
          },
          "increment_by": {
            "type": "integer",
            "default": 1,
            "title": "Increment By #"
          }
        },
        "disposition": [
          "group_by",
          "increment_by"
        ]
      },
      "rpcs": {
        "get_count": {
          "description": "Gets Current Count and Last Update Time",
          "contentType": "application/json",
          "title": "Get Count"
        }
      }
    },
    "text2json": {
      "title": "Convert Text to JSON",
      "description": "Converts A JSON String To JSON Object",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "body": {
            "title": "JSON String"
          }
        },
        "required": [
          "body"
        ],
        "disposition": [
          "body"
        ]
      }
    },
    "entity_encode": {
      "title": "HTML Entity Encode",
      "description": "Encodes HTML Entities, Strips &lt;script&gt; Tags And XSS",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "funnel": {
            "type": "string",
            "title": "Encode Attributes",
            "description" : "If Empty, Encodes All Attributes"
          }
        },
        "disposition": [
          "funnel"
        ]
      }
    },
    "entity_decode": {
      "title": "HTML Entity Decode",
      "description": "Decodes HTML Entities",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "funnel": {
            "type": "string",
            "title": "Decode Attributes",
            "description" : "If Empty, Decodes All Attributes"
          }
        },
        "disposition": [
          "funnel"
        ]
      }
    },
    "generator": {
      "title": "Generate a Payload",
      "description": "Periodically Generate A Static Payload",
      "trigger": "poll",
      "config": {
        "properties": {
          "payload": {
            "type": "string",
            "title": "Payload"
          }
        },
        "disposition": [
          "payload"
        ]
      },
      "exports": {
        "properties": {
          "payload": {
            "type": "string",
            "title": "Payload"
          }
        }
      },
      "imports": {
        "properties": {}
      }
    },
    "file_gzip": {
      "title": "GZip Files",
      "description": "Replace Any Present File With A GZipped Equivalent",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {}
      }
    },
    "file_rename": {
      "title": "Rename File",
      "description": "Renames A File",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "file_new_name" : {
            "type" : "string",
            "title" : "New Filename",
            "description" : "Be Careful That Multiple Files Don't Have The Same Name!"
          }
        },
        "required" : [
          "file_new_name"
        ],
        "disposition" : [
          "file_new_name"
        ]
      }
    },
    "regex_replace": {
      "title": "Regex Replace",
      "description": "Replace a String by Regulr Expression",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "out_str": {
            "type": "string",
            "title": "Output String"
          }
        }
      },
      "imports": {
        "properties": {
          "in_str": {
            "type": "string",
            "title": "Input"
          },
          "regex": {
            "type": "string",
            "title": "Match Filter",
            "description" : "Literal String Or <a href='http://en.wikipedia.org/wiki/Regular_expression'>Regular Expression</a>"
          },
          "repl_str": {
            "type": "string",
            "title": "Replace With"
          }
        },
        "required": [
          "in_str",
          "regex"
        ],
        "disposition": [
          "in_str",
          "regex",
          "repl_str"
        ]
      }
    },
    "truthy": {
      "title": "Input is Truthy",
      "description": "Continue Only If Input Has A True-like Value",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Input",
            "description" : "Continues When 1, yes, y or true"
          }
        },
        "required" : [
          "value"
        ],
        "disposition": [
          "value"
        ]
      }
    },
    "falsy": {
      "title": "Input is Falsy",
      "description": "Continue Only If Input Has A False-like Value",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Input",
            "description" : "Continues When 0, no, n or false"
          }
        },
        "required" : [
          "value"
        ],
        "disposition": [
          "value"
        ]
      }
    },
    "delta_gate": {
      "title": "When Something Changes",
      "description": "Continue Only When A Value Changes",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "delta": {
            "type": "string",
            "title": "Delta"
          }
        }
      },
      "imports": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key Name",
            "description" : "Name Of The Value To Track"
          },
          "value": {
            "type": "string",
            "title": "Tracking Value",
            "description" : "Actual Value"
          },
          "delta_precision": {
            "type": "number",
            "default": 1,
            "title": "Floating Point Delta Precision"
          }
        },
        "required": [
          "key"
        ],
        "disposition": [
          "key",
          "value",
          "delta_precision"
        ]
      }
    },
    "has_files": {
      "title": "When A File Is Present",
      "description": "Continue Only When A File Is Present",
      "trigger": "invoke",
      "config": {
        "properties": {
          "extension": {
            "type": "string",
            "title": "File Extension"
          }
        },
        "disposition": [
          "extension"
        ]
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {}
      }
    },
    "dedup": {
      "title": "De-Duplicate",
      "description": "Ignore Values which have been seen before",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {}
      },
      "imports": {
        "properties": {
          "value": {
            "type": "string",
            "title": "New Value"
          }
        },
        "required": [
          "value"
        ],
        "disposition": [
          "value"
        ]
      }
    },
    "console": {
      "title": "Log to Console",
      "description": "Logs to Console & passes Message along.",
      "trigger": "invoke",
      "config": {
        "properties": {},
        "definitions": {}
      },
      "exports": {
        "properties": {
          "exported": {
            "type": "object",
            "title":"Consoled Message",
          }
        }
      },
      "imports": {
        "properties": {
          "imported": {
            "type": "object",
            "title": "Message to Send to Console"
          }
        }
      }
    }
  },
  "dataSources": {
    "counter": {
      "properties": {
        "id": {
          "type": "string",
          "renderable": true,
          "writable": false,
          "unique": true
        },
        "owner_id": {
          "type": "string",
          "renderable": false,
          "writable": false
        },
        "channel_id": {
          "type": "string",
          "renderable": true,
          "writable": false
        },
        "created": {
          "type": "number",
          "renderable": true,
          "writable": false
        },
        "last_update": {
          "type": "number",
          "renderable": true,
          "writable": false
        },
        "group": {
          "type": "string",
          "renderable": true,
          "writable": false
        },
        "count": {
          "type": "number",
          "renderable": true,
          "writable": false,
          "default": 0
        }
      },
      "keys": [
        "channel_id",
        "owner_id",
        "group"
      ]
    },
    "delta_gate": {
      "properties": {
        "owner_id": {
          "type": "string",
          "renderable": false,
          "writable": false
        },
        "channel_id": {
          "type": "string",
          "renderable": true,
          "writable": false
        },
        "created": {
          "type": "number",
          "renderable": true,
          "writable": false
        },
        "last_update": {
          "type": "number",
          "renderable": true,
          "writable": false
        },
        "key": {
          "type": "string",
          "renderable": true,
          "writable": false
        },
        "value": {
          "type": "string",
          "renderable": true,
          "writable": false
        }
      },
      "keys": [
        "channel_id",
        "owner_id",
        "key"
      ]
    }
  },
  "tags": [
    "productivity"
  ]
}
